substitutions:
  rover_id: "1"
  # Ensure even channel spacing for up to 10 rovers
  ap_channel_1: "3"
  ap_channel_2: "7"
  ap_channel_3: "11"
  ap_channel_4: "3"
  ap_channel_5: "7"
  ap_channel_6: "11"
  ap_channel_7: "3"
  ap_channel_8: "7"
  ap_channel_9: "11"
  ap_channel_10: "3"
  # Include secrets using non-standard way, to ensure missing secrets are not throwing errors
  <<: !include secrets.yaml
esphome:
  name: rover

esp32:
  board: esp-wrover-kit
  framework:
    type: arduino
    # IDF mode is not supported with current rover_web_server
    #type: esp-idf
    # sdkconfig_options:
    #   CONFIG_LOG_MAXIMUM_LEVEL_DEBUG: y

# Enable logging
logger:
  # level: VERBOSE
  # logs:
  #   camera: VERBOSE
  #   wifi: INFO

ota:
  - platform: esphome
    password: ""

wifi:
  domain: .home
  power_save_mode: none
  output_power: 18dB
  # networks:
  #   - ssid: ${wifi_ssid}
  #     password: ${wifi_password}
  #     hidden: ${wifi_hidden}
  #     bssid: ${wifi_bssid}
  ap:
    ssid: ${ap_ssid_${rover_id}}
    password: ${ap_password_${rover_id}}
    channel: ${ap_channel_${rover_id}}

external_components:
  - source: components

rover_web_server:
  port: 80
  version: 4
  local: true
  include_internal: true
esp32_camera_web_server:
  - port: 8080
    mode: stream
  # - port: 8081
  #   mode: snapshot


# External components
number:
  - platform: template
    id: "servo_1_angle"
    min_value: 0
    max_value: 180
    initial_value: 90
    step: 1
    optimistic: true
    set_action:
      lambda: |-
        id(servo_1).write(x / 90.0 - 1.0);
  - platform: template
    id: "servo_2_angle"
    min_value: 0
    max_value: 180
    initial_value: 90
    step: 1
    optimistic: true
    set_action:
      lambda: |-
        id(servo_2).write(x / 90.0 - 1.0);
fan:
  - platform: hbridge
    id: motor_left
    pin_a: motor_left_1_pwm
    pin_b: motor_left_2_pwm
  - platform: hbridge
    id: motor_right
    pin_a: motor_right_1_pwm
    pin_b: motor_right_2_pwm
servo:
  - id: servo_1
    output: servo_1_pwm
    # min_level: 5%
    # max_level: 10%
  - id: servo_2
    output: servo_2_pwm
    # min_level: 5%
    # max_level: 10%

output:
  - platform: ledc
    id: motor_left_1_pwm
    pin: GPIO32
    frequency: 1000Hz
    inverted: false
  - platform: ledc
    id: motor_left_2_pwm
    pin: GPIO33
    frequency: 1000Hz
    inverted: false
  - platform: ledc
    id: motor_right_1_pwm
    pin: GPIO0
    frequency: 1000Hz
    inverted: false
  - platform: ledc
    id: motor_right_2_pwm
    pin: GPIO15
    frequency: 1000Hz
    inverted: false

  - platform: ledc
    id: servo_1_pwm
    pin: GPIO12
    frequency: 50Hz
    inverted: false
  - platform: ledc
    id: servo_2_pwm
    pin: GPIO14
    frequency: 50Hz
    inverted: false

switch:
  - platform: gpio
    name: "Test LED"
    pin: GPIO2
esp32_camera:
  name: Rover Cam
  external_clock:
    pin: GPIO21
    frequency: 20MHz
  i2c_pins:
    sda: GPIO26
    scl: GPIO27
  data_pins: [GPIO4, GPIO5, GPIO18, GPIO19, GPIO36, GPIO39, GPIO34, GPIO35]
  vsync_pin: GPIO25
  href_pin: GPIO23
  pixel_clock_pin: GPIO22
  resolution: 800x600
  max_framerate: 1 fps
  # resolution: 1600x1200
  jpeg_quality: 10
